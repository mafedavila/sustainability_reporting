version: '3.8'

services:
  timescaledb:
    build:
      context: .
      dockerfile: ./database/Dockerfile
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: example_password
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  grafana:
    build:
      context: .
      dockerfile: ./dashboard/Dockerfile
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_DEFAULT_THEME: light
      GF_PATHS_PROVISIONING: /etc/grafana/provisioning
      GF_SECURITY_ALLOW_EMBEDDING: "true"
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_NAME: "Main Org."
      GF_AUTH_ANONYMOUS_ORG_ROLE: "Viewer"
      GF_SERVER_DOMAIN: "localhost"
      GF_SERVER_ROOT_URL: "%(protocol)s://%(domain)s:%(http_port)s/grafana/"
      GF_SECURITY_COOKIE_SAMESITE: "none"
      GF_SERVER_SERVE_FROM_SUB_PATH: "true"
      GF_CORS_ALLOWED_ORIGINS: "*"
      GF_CORS_ALLOW_CREDENTIALS: "true"
    volumes:
      - ./dashboard/provisioning:/etc/grafana/provisioning
      - grafana-data:/var/lib/grafana
    depends_on:
      timescaledb:
        condition: service_healthy
    command:
      [
        "/bin/bash",
        "-c",
        "./wait-for-it.sh timescaledb:5432 -- ./start_grafana.sh"
      ]

  angular:
    build:
      context: ./website
      dockerfile: Dockerfile
    ports:
      - "4200:80"
    volumes:
      - ./website:/usr/src/app
    depends_on:
      - grafana

volumes:
  db-data:
  grafana-data:
